openapi: 3.0.0
info:
  title: open-api-desc
  version: 1.0.0
  contact:
    name: ZEGO Support
    email: support@zegocloud.com

servers:
  $ref: '../shared-components.yaml#/servers'

tags:
  - group

paths:
  /:
    post:
      tags: [group]
      summary: 移除群成员
      description: |
        通过指定用户 ID 移除群内用户。

        <Note title="说明">

        - 群内用户 ID 可通过 [查询群成员列表](/zh/zim-server/group/query-group-member-list) 获取。
        - 如果被移除的用户为群主，则群列表第一位用户会自动成为新群主。
        </Note>

        成功移除用户后，全体群成员（包括群主自己、被移除的成员）会通过 ZIM SDK 回调接口收到群成员状态变更通知：

        | iOS-25% | Android-25% | macOS-25% | Windows-25% |
        |-----|---------|--------|---------|
        | [groupMemberStateChanged](https://doc-zh.zego.im/article/api?doc=zim_API~objective-c_ios~protocol~ZIMEventHandler#zim-group-member-state-changed-event-user-list-operated-info-group-id) | [onGroupMemberStateChanged](https://doc-zh.zego.im/article/api?doc=zim_API~java_android~class~ZIMEventHandler#on-group-member-state-changed) | [groupMemberStateChanged](https://doc-zh.zego.im/article/api?doc=zim_API~objective-c_macos~protocol~ZIMEventHandler#zim-group-member-state-changed-event-user-list-operated-info-group-id) | [onGroupMemberStateChanged](https://doc-zh.zego.im/article/api?doc=zim_API~cpp_windows~class~ZIMEventHandler#on-group-member-state-changed) |

        | Web-25% | 小程序-25% | Flutter-25% | React Native-25% |
        |---------|-----|---------|---------|
        | [groupMemberStateChanged](https://doc-zh.zego.im/article/api?doc=zim_API~javascript_web~interface~ZIMEventHandler#group-member-state-changed) | [groupMemberStateChanged](https://doc-zh.zego.im/article/api?doc=zim_API~javascript_wxxcx~interface~ZIMEventHandler#group-member-state-changed) | [onGroupMemberStateChanged](https://pub.dev/documentation/zego_zim/latest/zego_zim/ZIMEventHandler/onGroupMemberStateChanged.html) | [groupMemberStateChanged](https://doc-zh.zego.im/article/api?doc=zim_API~javascript_react-native~interface~ZIMEventHandler#group-member-state-changed) |

        | Unity3D-25% | uni-app \| uni-app x-25% | HarmonyOS-25% |
        |---------|---------|---------|
        | [OnGroupMemberStateChanged](https://doc-zh.zego.im/article/api?doc=zim_API~cs_unity3d~class~ZIMEventHandler#on-group-member-state-changed) | [groupMemberStateChanged](https://doc-zh.zego.im/article/api?doc=zim_API~javascript_uni-app~interface~ZIMEventHandler#group-member-state-changed) | [groupMemberStateChanged](https://doc-zh.zego.im/article/api?doc=zim_API~javascript_harmony~interface~ZIMEventHandler#group-member-state-changed) |

        <Note title="说明">以下 `FromUserId` 和 `UserId` 对应的用户已在客户端调用 `login` 方法登录 ZIM 服务，或已调用 [服务端 API](/zh/zim-server/user/batch-register-users) 完成注册。</Note>

        <Note title="说明">FromUserId、GroupId、UserId[] 和 CustomReason 仅支持数字，英文字符和 {'!','#','$','%','&','(',')','+','\'',':',';','<','=','.','>','?','@','[',']','^','_','{','}','|','~'}。</Note>

        <Note title="说明">调用频率限制：20 次/秒。</Note>
      operationId: remove-group-member
      parameters:
        - name: Action
          in: query
          description: |
            > 接口原型参数
            >
            > https://zim-api.zego.im/?Action=KickoutGroupUser
          required: true
          schema:
            type: string
            enum: [KickoutGroupUser]
          style: form
          explode: true
        - $ref: '../shared-components.yaml#/components/parameters/AppId'
        - $ref: '../shared-components.yaml#/components/parameters/SignatureNonce'
        - $ref: '../shared-components.yaml#/components/parameters/Timestamp'
        - $ref: '../shared-components.yaml#/components/parameters/SignatureVersion'
        - $ref: '../shared-components.yaml#/components/parameters/Signature'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KickoutGroupUserRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KickoutGroupUserResponse'

components:
  schemas:
    KickoutGroupUserRequest:
      type: object
      required: [FromUserId, GroupId, UserId]
      properties:
        FromUserId:
          type: string
          description: 操作者的用户 ID。
          maxLength: 32
          example: "zego_user"
        GroupId:
          type: string
          description: 群组 ID。
          maxLength: 32
          example: "groupA"
        UserId:
          type: array
          description: |
            需要被移除的用户 ID 列表，最大支持 50 个用户 ID。

            示例："UserId": ["usera","userb"]。
          maxItems: 50
          items:
            type: string
            maxLength: 32
            example: "user1"
          example: ["userA"]
        CustomReason:
          type: string
          description: 移除原因，最长 32 字节。
          example: "reason"
    KickoutGroupUserResponse:
      type: object
      properties:
        Code:
          type: number
          description: |
            返回码。

            以下仅列出了接口业务逻辑相关的返回码，完整返回码请参考 [全局返回码](/zim-server/return-codes)。
            > **说明**
            >
            > 如果您发起请求同时移除多名用户时：
            > <ul><li>如果成功移除 1 个或以上的用户，Code 都会返回 0。此时请参考 ErrorList 中的具体信息，确认操作结果。</li>
            > <li>如果所有用户都没被成功移除，Code 会返回相关返回码，具体请参考 <a href="/zim-server/return-codes" target="_blank">全局返回码</a>。</li></ul>
            <table>
            <thead><tr><th>返回码</th><th>说明</th><th>处理建议</th></tr></thead>
            <tbody>
            <tr><td>660000002</td><td>参数错误。</td><td>请参考 Request 输入正确参数。</td></tr>
            <tr><td>660000011</td><td>需要被移除的用户数量超过限制。</td><td>数量应不超过 50。</td></tr>
            <tr><td>660600001</td><td>群不存在。</td><td>请确认 GroupId 是否正确。</td></tr>
            <tr><td>660600005</td><td>调用频率超出限制。</td><td>调用频率为 20 次/秒，请勿超出限制。</td></tr>
            <tr><td>660600008</td><td>需要被移除的用户不在群内。</td><td>用户已退出群，无需处理。</td></tr>
            <tr><td>660600009</td><td>获取群相关信息失败。</td><td>请确认 GroupID 是否正确；如正确请联系技术支持。</td></tr>
            </tbody>
            </table>
        Message:
          type: string
          description: 请求结果的说明信息。
          example: "success"
        RequestId:
          type: string
          description: 请求 ID。
          example: "343649807833778782"
        ErrorList:
          type: array
          description: |
            失败列表。
            <ul>
            <li>Code 为 0：</li>
            <li>ErrorList 为空，全部指定用户移除成功。</li>
            <li>ErrorList 不为空，表示部分指定用户移除失败，请参考 SubCode 处理。</li>
            <li>Code 不为 0：</li>
            <li>ErrorList 为空，表示参数错误、接口频率限制、系统错误。</li>
            <li>ErrorList 不为空，表示全部指定用户移除失败。</li>
            </ul>
          items:
            type: object
            properties:
              UserId:
                type: string
                description: 移除失败的用户 ID。
                example: "u2"
              SubCode:
                type: number
                description: 移除失败的错误码。
                example: 660000012