openapi: 3.0.0
info:
  title: open-api-desc
  version: 1.0.0
  contact:
    name: ZEGO Support
    email: support@zegocloud.com

servers:
  $ref: '../shared-components.yaml#/servers'

tags:
  - room

paths:
  /:
    post:
      tags: [room]
      summary: 更新房间属性
      description: |
       根据房间 ID 更新自定义的房间属性。一个房间最多可设置 20 个房间属性，如果需要增加房间属性数量上限，请联系 ZEGO 技术支持。

       房间属性更新后，可以通过以下 ZIM SDK 的回调接口，接收房间属性更新的通知。
       | iOS-25% | Android-25% | macOS-25% |Windows-25% |
       |-----|---------|-------|-------|
       |[roomAttributesUpdated](https://doc-zh.zego.im/article/api?doc=zim_API~objective-c_ios~protocol~ZIMEventHandler#zim-room-attributes-updated-room-id)|[onRoomAttributesUpdated](https://doc-zh.zego.im/article/api?doc=zim_API~java_android~class~ZIMEventHandler#on-room-attributes-updated)|[roomAttributesUpdated](https://doc-zh.zego.im/article/api?doc=zim_API~objective-c_macos~protocol~ZIMEventHandler#zim-room-attributes-updated-room-id)|[onRoomAttributesUpdated](https://doc-zh.zego.im/article/api?doc=zim_API~cpp_windows~class~ZIMEventHandler#on-room-attributes-updated)|
       
       | Web-25% | 小程序-25% |Flutter-25% | React Native-25% |
       |---------|-----|--------|---------|
       |[roomAttributesUpdated](https://doc-zh.zego.im/article/api?doc=zim_API~javascript_web~interface~ZIMEventHandler#room-attributes-updated)|[roomAttributesUpdated](https://doc-zh.zego.im/article/api?doc=zim_API~javascript_wxxcx~interface~ZIMEventHandler#room-attributes-updated)|[onRoomAttributesUpdated](https://pub.dev/documentation/zego_zim/latest/zego_zim/ZIMEventHandler/onRoomAttributesUpdated.html)|[roomAttributesUpdated](https://doc-zh.zego.im/article/api?doc=zim_API~javascript_react-native~interface~ZIMEventHandler#room-attributes-updated)|
       
       | Unity3D-25% | uni-app \| uni-app x-25% | HarmonyOS-25% |
       |--------------|---------|---------|
       |[OnRoomAttributesUpdated](https://doc-zh.zego.im/article/api?doc=zim_API~cs_unity3d~class~ZIMEventHandler#on-room-attributes-updated)|[roomAttributesUpdated](https://doc-zh.zego.im/article/api?doc=zim_API~javascript_uni-app~interface~ZIMEventHandler#room-attributes-updated)|[roomAttributesUpdated](https://doc-zh.zego.im/article/api?doc=zim_API~javascript_harmony~interface~ZIMEventHandler#room-attributes-updated)|
        
        <Note title="说明">调用频率限制：20 次/秒。</Note>
      operationId: update-room-attributes
      parameters:
        - name: Action
          in: query
          description: |
            > 接口原型参数
            >
            > https://zim-api.zego.im/?Action=ModifyRoomAttribute
          required: true
          schema:
            type: string
            enum: [ModifyRoomAttribute]
          style: form
          explode: true
        - $ref: '../shared-components.yaml#/components/parameters/AppId'
        - $ref: '../shared-components.yaml#/components/parameters/SignatureNonce'
        - $ref: '../shared-components.yaml#/components/parameters/Timestamp'
        - $ref: '../shared-components.yaml#/components/parameters/SignatureVersion'
        - $ref: '../shared-components.yaml#/components/parameters/Signature'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyRoomAttributeRequest'
            example:
              RoomId: "room123"
              FromUserId: "fromUserId"
              Attributes:
                - Action: 0
                  Key: "attribute1"
                  Value: "value1"
                  AutoDelete: 1
                - Action: 1
                  Key: "attribute2"
                  Value: ""
                  AutoDelete: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyRoomAttributeResponse'
              example:
                Code: 0
                Message: success
                RequestId: "req-123456789"
                ErrKeyList:
                  - SubCode: 1
                    Key: "attr1"
                  - SubCode: 2
                    Key: "attr2"

components:
  schemas:
    ModifyRoomAttributeRequest:
      type: object
      required: [FromUserId, RoomId, Attributes]
      properties:
        FromUserId:
          type: string
          description: 操作者，需要是已注册状态，该用户不会自动加入房间。仅支持数字，英文字符和 '!'，'#'，'$'，'%'，'&'，'('，')'，'+'，'-'，':'，';'，'<'，'='，'.'，'>'，'?'，'@'，'['，']'，'^'，'_'，' '，'，'，'
          maxLength: 32
          example: "fromUserId"
        RoomId:
          type: string
          description: 房间 ID。仅支持数字，英文字符和 '!'，'#'，'$'，'%'，'&'，'('，')'，'+'，'-'，':'，';'，'<'，'='，'.'，'>'，'?'，'@'，'['，']'，'^'，'_'，'，'，'
          maxLength: 32
          example: "room123"
        Attributes:
          type: array
          description: 要更新的房间属性信息。
          items:
            $ref: '#/components/schemas/ModifyRoomAttribute'
    ModifyRoomAttribute:
      type: object
      required: [Action, Key]
      properties:
        Action:
          type: number
          description: 删除还是设置，0 设置，1 删除。
          enum: [0, 1]
        Key:
          type: string
          description: |
            房间属性 key。 

            > **说明**
            >
            > 如果传递的 Key 已经存在，则会修改已有的属性信息。
          example: "attribute1"
        Value:
          type: string
          description: 房间属性 value。
          example: "value1"
        AutoDelete:
          type: number
          description: 用户退出时，是否自动删除，0：不自动删除，1：自动删除。如果 FromUserId 不在房间内，则会在其先进入房间后，然后再退出时触发删除操作。
          enum: [0, 1]
          example: 1
        StopOnError:
          type: integer
          description: |
            是否开启快速失败，默认为关闭。
            - 0: 关闭快速失败。执行遇到错误时，记录当前属性并继续执行后续的更新操作，执行结束后返回所有记录到的属性。
            - 1: 开启快速失败。执行遇到错误时，停止更新操作并返回本次更新的属性，已执行成功的更新操作会保留。
          enum: [0, 1]
    ModifyRoomAttributeResponse:
      type: object
      properties:
        Code:
          type: integer
          description: |
            返回状态码（0 表示成功）。

            以下仅列出了接口业务逻辑相关的返回码，完整返回码请参考 [全局返回码](/zim-server/return-codes)。
            <table>
            <thead><tr><th>返回码</th><th>说明</th><th>解决方案</th></tr></thead>
            <tbody>
            <tr><td>660000002</td><td>参数错误。</td><td>请检查参数。</td></tr>
            <tr><td>660300005</td><td>频率限制。</td><td>请稍后再尝试。</td></tr>
            </tbody>
            </table>
        Message:
          type: string
          description: 返回状态信息。
          example: "success"
        RequestId:
          type: string
          description: 请求唯一标识。
          example: "req-123456789"
        ErrKeyList:
          type: array
          description: 错误的 key 列表（仅失败时返回）。
          items:
            type: object
            properties:
              SubCode:
                type: number
                description: |
                  错误码。

                  以下仅列出了接口业务逻辑相关的返回码，完整返回码请参考 [全局返回码](/zim-server/return-codes)。
                  <table>
                  <thead><tr><th>返回码</th><th>说明</th><th>解决方案</th></tr></thead>
                  <tbody>
                  <tr><td>660000002</td><td>参数错误。</td><td>请检查参数。</td></tr>
                  <tr><td>660300005</td><td>频率限制。</td><td>请稍后再尝试。</td></tr>
                  </tbody>
                  </table>
                example: 1
              Key:
                type: string
                description: 出现错误的 key 值。
                example: "attr1"