openapi: 3.0.0
info:
  title: open-api-desc
  version: 1.0.0
  contact:
    name: ZEGO Support
    email: support@zegocloud.com

servers:
  $ref: '../shared-components.yaml#/servers'

tags:
  - messaging

paths:
  /:
    post:
      tags: [messaging]
      summary: 查询消息
      description: |
        本接口支持查询单个指定会话（群聊、单聊）中的多条消息。

        <Warning title="注意">本接口的频率限制是 20 条消息/秒，而非 20 次/秒。</Warning>
        
      operationId: query-messages
      parameters:
        - name: Action
          in: query
          description: |
            > 接口原型参数
            >
            > https://zim-api.zego.im/?Action=QueryMessagesByMsgSeq
          required: true
          schema:
            type: string
            enum: [QueryMessagesByMsgSeq]
          style: form
          explode: true
        - $ref: '../shared-components.yaml#/components/parameters/AppId'
        - $ref: '../shared-components.yaml#/components/parameters/SignatureNonce'
        - $ref: '../shared-components.yaml#/components/parameters/Timestamp'
        - $ref: '../shared-components.yaml#/components/parameters/SignatureVersion'
        - $ref: '../shared-components.yaml#/components/parameters/Signature'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryMessagesRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryMessagesResponse'

components:
  schemas:
    QueryMessagesRequest:
      type: object
      required: [FromUserId, ConvId, ConvType, MsgSeqList]
      properties:
        FromUserId:
          type: string
          description: |
            用户的 UserID（已在客户端调用 login 方法登录 ZIM 服务，或已调用 [服务端 API](./../user/batch-register-users.mdx) 完成注册）。
            - 查询单聊会话消息时，此处填入任一参与用户的 userID。
            - 查询群聊会话消息时，此处可填入任意已注册用户的 userID。
          maxLength: 32
          example: "user0"
        ConvId:
          type: string
          description: |
            会话 ID。
            - 查询单聊会话消息时，此处填入另一参与用户的 userID（已在客户端调用 login 方法登录 ZIM 服务，或已调用 [服务端 API](./../user/batch-register-users.mdx) 完成注册）。
            - 查询群聊会话消息时，此处填入目标群组的 groupID。
          maxLength: 32
          example: "user1"
        ConvType:
          type: number
          description: |
            会话类型：
            - 0：单聊。
            - 2：群聊。
          enum: [0, 2]
          example: 0
        MsgSeqList:
          type: array
          description: |
            待查询消息的 seq 列表。列表长度上限为 20。
            > 说明
            > 如需上调，请联系 ZEGO 技术支持。

            seq 获取方式：
            - 若需要查询由**客户端**发出的消息，通过 [消息发送后回调](../callbacks/message-sent.mdx) 获取 MsgSeq。
            - 若需要查询由 服务端 API [SendPeerMessage](./send-a-one-to-one-message.mdx) 发出的**单聊**消息，通过接口响应数据获取 MsgSeq。
            - 若需要查询由 服务端 API [SendGroupMessage](./send-group-messages.mdx) 发出的**群聊**消息，通过接口响应数据获取 MsgSeq。
          maxItems: 20
          items:
            type: number
            example: 1
          example: [1, 2, 3]
    QueryMessagesResponse:
      type: object
      properties:
        Code:
          type: number
          description: |
            返回码。

            以下仅列出了接口业务逻辑相关的返回码，完整返回码请参考 [全局返回码](../return-codes.mdx)。
            <table>
            <tbody><tr>
            <th>返回码</th>
            <th>说明</th>
            <th>处理建议</th>
            </tr>
            <tr>
            <td>660000001</td>
            <td>服务端出错。</td>
            <td>请重试，或联系 ZEGO 技术支持。</td>
            </tr>
            <tr>
            <td>660000002</td>
            <td>输入的参数缺失或不合法。</td>
            <td>请检查输入的参数。</td>
            </tr>
            <tr>
            <td>660300005</td>
            <td>调用接口的频率超出了 AppID 级别限制。</td>
            <td>请稍后再试，或参考相关文档了解调用频率。</td>
            </tr>
            <tr>
            <td>660700008</td>
            <td>获取用户信息出错。</td>
            <td>请检查用户 ID 是否正确。</td>
            </tr>
            <tr>
            <td>660700015</td>
            <td>用户未注册。</td>
            <td>请先注册用户。</td>
            </tr>
            </tbody>
            </table>
          example: 0
        Message:
          type: string
          description: 请求结果的说明信息。
          example: "success"
        RequestId:
          type: string
          description: 请求 ID。
          example: "343649807833778782"
        MessageList:
          type: array
          description: 返回的消息内容列表，详情请参考 MessageList 结构。
          items:
            type: object
            properties:
              Sender:
                type: string
                description: 消息发送者。
                example: "userA"
              MsgType:
                type: number
                description: |
                  消息类型：
                  - 1：文本。
                  - 10：组合。
                  - 11：图片。
                  - 12：文件。
                  - 13：音频。
                  - 14：视频。
                  - 31：撤回消息。
                  - 32：Tips 消息。
                  - 200：自定义。
                example: 1
              SubMsgType:
                type: number
                description: 具体的自定义类型。值由用户发送自定义消息时填写，取值范围为 [0,200]。只有当 MsgType 为 200（自定义类型）时，此参数才有意义。
              MsgBody:
                type: string
                description: |
                  消息内容。
                  - 当 MsgType 为 1（文本类型）或 200（自定义类型），MsgBody 为发送消息时传入的消息内容，开发者可直接阅读消息内容。
                  - 当 MsgType 为下列类型时，MsgBody 为 JSON 字符串。请使用 URLDecode 对此 JSON 字符串解码，并按照对应结构获取消息中各字段数据：
                    - 当 MsgType 为 11、12、13、14（多媒体消息）：MsgBody JSON 字符串解析结果参数说明 - 多媒体消息。
                    - 当 MsgType 为 10（组合消息）：MsgBody JSON 字符串解析结果参数说明 - 组合消息。
                    - 当 MsgType 为 31（消息已被撤回）：MsgBody JSON 字符串解析结果参数说明 - 撤回消息。
                    - 当 MsgType 为 32（Tips 消息）：MsgBody JSON 字符串解析结果参数说明 - Tips 消息。
                example: "this is a message"
              MsgId:
                type: number
                description: 消息 ID，可借此确定消息的唯一性。
                example: 971503777289036700
              MsgSeq:
                type: number
                description: 消息 seq。
                example: 1
              Payload:
                type: string
                description: 消息扩展字段。
                example: "this is a payload"
              MsgTime:
                type: number
                description: 服务端收到消息的时间，Unix 时间戳，单位为毫秒（ms）。
                example: 1705895412000
              IsEmpty:
                type: number
                description: |
                  是否是空消息：
                  - 0：不是空消息。
                  - 1：消息已被删除（查询不到或者客户调用接口删除此消息），此时其他参数均为空。
                  - 2：消息已被撤回。
                example: 0
          example:
            - Sender: "userA"
              MsgType: 1
              MsgBody: "this is a message"
              MsgId: 971503777289036700
              MsgSeq: 1
              Payload: "this is a payload"
              MsgTime: 1705895412000
              IsEmpty: 0
