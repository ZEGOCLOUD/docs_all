openapi: 3.0.0
info:
  title: open-api-desc
  version: 1.0.0
  contact:
    name: ZEGO Support
    email: support@zegocloud.com

servers:
  $ref: '../shared-components.yaml#/servers'

tags:
  - messaging

paths:
  /:
    post:
      tags: [messaging]
      summary: 导入群聊消息
      description: |
        如果您正使用其他即时通讯服务并希望接入 ZIM，可调用此接口，向 ZIM 导入群组的历史消息（按时间顺序）。

        <Warning title="注意">不支持信令消息。</Warning>
        <Warning title="注意">MessageBody 不支持 OfflinePush 与 HasReceipt 字段。</Warning>
        <Note title="说明">FromUserId、GroupId 仅支持数字、英文字符和 \{'!'，'#'，'$'，'%'，'&'，'('，')'，'+'，'-'，':'，';'，'\<'，'='，'.'，'\>'，'?'，'@'，'['，']'，'^'，'_'，' '，'\{'，'\}'，'|'，'~'\}。</Note>
        <Note title="说明">SDK 版本兼容性：文本消息发送方 SDK≥2.7.0 才会收到；自定义消息双方 SDK≥2.8.0 才能正确收发；低于 2.8.0 的接收端将显示未知消息且无法获取内容；1.x.x 无法收到自定义消息。</Note>

        <Note title="说明">调用频率限制：20 次/秒。</Note>
        
      operationId: import-group-messages
      parameters:
        - name: Action
          in: query
          description: |
            > 接口原型参数
            >
            > https://zim-api.zego.im/?Action=ImportGroupMsg
          required: true
          schema:
            type: string
            enum: [ImportGroupMsg]
          style: form
          explode: true
        - $ref: '../shared-components.yaml#/components/parameters/AppId'
        - $ref: '../shared-components.yaml#/components/parameters/SignatureNonce'
        - $ref: '../shared-components.yaml#/components/parameters/Timestamp'
        - $ref: '../shared-components.yaml#/components/parameters/SignatureVersion'
        - $ref: '../shared-components.yaml#/components/parameters/Signature'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportGroupMessageRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportGroupMessageResponse'

components:
  schemas:
    ImportGroupMessageRequest:
      type: object
      required: [FromUserId, GroupId, MessageType, Priority, MessageBody]
      properties:
        FromUserId:
          type: string
          description: 消息发送者的用户 ID（已在客户端调用 login 方法登录 ZIM 服务，或已调用 [服务端 API](./../user/batch-register-users.mdx) 完成注册）。
          maxLength: 32
          example: "u1"
        GroupId:
          type: string
          description: 群组 ID。
          maxLength: 32
          example: "r1"
        MessageType:
          type: number
          description: |
            消息类型，群聊会话的适用类型请参考 [MessageBody 说明](./messagebody-introduction.mdx)。
            > 注意
            > 不支持信令消息。
          example: 1
        Priority:
          type: number
          description: |
            消息优先级（详情请参考 [基本概念介绍 - 消息优先级](https://doc-zh.zego.im/zim-android/introduction/basic-concepts#消息优先级)），取值如下：
            - 1：低。
            - 2：中。
            - 3：高。
          enum: [1, 2, 3]
          example: 1
        MessageBody:
          type: object
          description: |
            消息内容，具体参数格式请参考 [MessageBody 说明](./messagebody-introduction.mdx)。
            > 注意
            > 不支持 `OfflinePush` 和 `HasReceipt` 字段。
          example:
            Message: "hello world"
            ExtendedData: "d"
        SubMsgType:
          type: number
          description: 具体的自定义类型。值由您定义，取值范围为 [0,200]。当 MessageType 为自定义消息时，必填。
          example: 200
        SearchedContent:
          type: string
          description: 自定义消息的检索字段。当 MessageType 为自定义消息时，才可填写此字段，长度上限默认为 64 字节。此字段作用于客户端，除非填写了此字段，否则无法通过客户端搜索到关联的自定义消息。
          example: "ex"
        SendMessageTime:
          type: number
          description: |
            消息发送时间戳（Unix，毫秒级别）。请按照发送时间从前到后的顺序进行导入。
            - 传 0 或不传：取"当前时间"。
            - 其他值：最早可取"当前时间 - 套餐包规定的历史消息保存天数（详情请参考 [计费说明 - 版本差异](./../introduction/pricing.mdx#版本差异)）* 86400000"，最晚不得晚于"当前时间"。

            不能早于套餐包规定的历史消息保存天数（详情请参考 [计费说明 - 版本差异](./../introduction/pricing.mdx#版本差异)），也不能晚于当前时间。
          example: 123
    ImportGroupMessageResponse:
      type: object
      properties:
        Code:
          type: number
          description: 返回码。
          example: 0
        Message:
          type: string
          description: 请求结果的说明信息。
          example: "success"
        RequestId:
          type: string
          description: 请求 ID。
          example: "343649807833778782"
        MsgSeq:
          type: number
          description: 消息 seq。
          example: 123
      example:
        Code: 0
        Message: "success"
        RequestId: "343649807833778782"
        MsgSeq: 123
