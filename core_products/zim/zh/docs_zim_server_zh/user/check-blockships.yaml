openapi: 3.0.0
info:
  title: open-api-desc
  version: 1.0.0
  contact:
    name: ZEGO Support
    email: support@zegocloud.com
servers:
  $ref: '../shared-components.yaml#/servers'
tags:
  - user
paths:
  /:
    post:
      tags: [user]
      summary: 检查黑名单关系
      description: |
        调用此接口，可为一名用户批量检查其与至多 20 名其他用户的黑名单关系（是否已拉黑这些用户）。如需上调，请联系 ZEGO 技术支持。

        <Note title="说明">调用频率限制：20 次/秒。</Note>
      operationId: check-blockships
      parameters:
        - name: Action
          in: query
          description: |
            > 接口原型参数
            >
            > https://zim-api.zego.im/?Action=CheckUsersIsInBlacklist
          required: true
          schema:
            type: string
            enum: [CheckUsersIsInBlacklist]
          style: form
          explode: true
        - $ref: '../shared-components.yaml#/components/parameters/AppId'
        - $ref: '../shared-components.yaml#/components/parameters/SignatureNonce'
        - $ref: '../shared-components.yaml#/components/parameters/Timestamp'
        - $ref: '../shared-components.yaml#/components/parameters/SignatureVersion'
        - $ref: '../shared-components.yaml#/components/parameters/Signature'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckUsersIsInBlacklistRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckUsersIsInBlacklistResponse'
components:
  schemas:
    CheckUsersIsInBlacklistRequest:
      type: object
      required: [FromUserId, UserIds]
      properties:
        FromUserId:
          type: string
          description: 为此用户查询黑名单关系。
          maxLength: 32
          example: "zego_user"
        UserIds:
          type: array
          description: 待检查黑名单关系的目标用户列表。默认数量上限为 20。
          maxItems: 20
          items:
            type: string
            maxLength: 32
            example: "user1"
          example: ["user1", "user2", "user3", "user4"]
    CheckUsersIsInBlacklistResponse:
      type: object
      properties:
        Code:
          type: integer
          description: |
            返回码。
            <Note title="说明">当您发起请求同时检查 FromUserId 与多名用户的黑名单关系时：<ul><li>如果成功检查 FromUserId 与 1 名或更多用户的黑名单关系，Code 都会返回 0。此时请参考 ErrList 中的具体信息，确认操作结果。</li><li>如果 FromUserId 与全部目标用户的黑名单关系都检查失败，Code 会返回相关返回码。</li></ul></Note>

            <table>
            <tbody><tr>
            <th>返回码</th>
            <th>描述</th>
            <th>处理建议</th>
            </tr>
            <tr>
            <td>660000002</td>
            <td>输入参数错误。</td>
            <td>请检查输入的参数。</td>
            </tr>
            <tr>
            <td>660300005</td>
            <td>调用接口的频率超出了 AppID 级别限制。</td>
            <td>请稍后再试。</td>
            </tr>
            <tr>
            <td>660500002</td>
            <td>`FromUserId` 未注册。</td>
            <td>请确认该用户是否已注册：<br/>- 确认已注册，请联系 ZEGO 技术支持排查。<br/>- 确认未注册，请注册此用户。</td>
            </tr>
            <tr>
            <td>660700015</td>
            <td>接口目标用户未注册。</td>
            <td>请确认该用户是否已注册：<br/>- 确认已注册，请联系 ZEGO 技术支持排查。<br/>- 确认未注册，请注册此用户。</td>
            </tr>
            <tr>
            <td>660800001</td>
            <td>`FromUserId` 未注册。</td>
            <td>请确认该用户是否已注册：<br/>- 确认已注册，请联系 ZEGO 技术支持排查。<br/>- 确认未注册，请注册此用户。</td>
            </tr>
            <tr>
            <td>660800039</td>
            <td>传入的用户列表超过限制。</td>
            <td>请缩短传入的用户列表。</td>
            </tr>
            </tbody></table>
          example: 0
        Message:
          type: string
          description: 请求结果的说明信息。
          example: "success"
        RequestId:
          type: string
          description: 请求 ID。
          example: "343649807833778782"
        Succ:
          type: array
          description: 检查成功列表。
          items:
            type: object
            properties:
              UserId:
                type: string
                description: 成功检查 FromUserId 与此用户 ID 的黑名单关系。
                example: "user1"
              Result:
                type: integer
                format: int32
                description: |
                  检查结果：
                  - 0：没被 FromUserId 拉黑。
                  - 1：已被 FromUserId 拉黑。
                enum: [0, 1]
                example: 1
        ErrList:
          type: array
          description: |
            检查失败列表。
            - Code 为 0：
              - ErrList 为空，表示成功检查 FromUserId 与全部目标用户的黑名单关系。
              - ErrList 不为空，表示 FromUserId 与部分目标用户的黑名单关系检查失败，请参考 SubCode 处理。
            - Code 不为 0：
              - ErrList 为空，表示参数错误、接口频率限制、系统错误。
              - ErrList 不为空，表示FromUserId 与全部目标用户的黑名单关系检查失败。
          items:
            type: object
            properties:
              UserId:
                type: string
                description: FromUserId 与此用户 ID 的黑名单关系检查失败。
                example: "user2"
              SubCode:
                type: integer
                description: 具体失败返回码。
                example: 660000002
